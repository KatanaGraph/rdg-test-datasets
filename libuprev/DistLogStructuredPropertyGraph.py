# automatically generated by the FlatBuffers compiler, do not modify

# namespace: v2

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DistLogStructuredPropertyGraph(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DistLogStructuredPropertyGraph()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDistLogStructuredPropertyGraph(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DistLogStructuredPropertyGraphBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x4C\x53\x47", size_prefixed=size_prefixed)

    # DistLogStructuredPropertyGraph
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DistLogStructuredPropertyGraph
    def StorageFormatVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DistLogStructuredPropertyGraph
    def PartitionPolicy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def DistLogStructuredPropertyGraphStart(builder): builder.StartObject(2)
def Start(builder):
    return DistLogStructuredPropertyGraphStart(builder)
def DistLogStructuredPropertyGraphAddStorageFormatVersion(builder, storageFormatVersion): builder.PrependUint32Slot(0, storageFormatVersion, 0)
def AddStorageFormatVersion(builder, storageFormatVersion):
    return DistLogStructuredPropertyGraphAddStorageFormatVersion(builder, storageFormatVersion)
def DistLogStructuredPropertyGraphAddPartitionPolicy(builder, partitionPolicy): builder.PrependUint32Slot(1, partitionPolicy, 0)
def AddPartitionPolicy(builder, partitionPolicy):
    return DistLogStructuredPropertyGraphAddPartitionPolicy(builder, partitionPolicy)
def DistLogStructuredPropertyGraphEnd(builder): return builder.EndObject()
def End(builder):
    return DistLogStructuredPropertyGraphEnd(builder)